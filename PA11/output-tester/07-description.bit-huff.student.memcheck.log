==8350== Memcheck, a memory error detector
==8350== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==8350== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==8350== Command: ./student.out b inputs/07-description.bit-huff
==8350== Parent PID: 8349
==8350== 
--8350-- 
--8350-- Valgrind options:
--8350--    --tool=memcheck
--8350--    --leak-check=full
--8350--    --verbose
--8350--    --log-file=memcheck.log
--8350-- Contents of /proc/version:
--8350--   Linux version 3.13.0-40-generic (buildd@comet) (gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #69-Ubuntu SMP Thu Nov 13 17:53:56 UTC 2014
--8350-- Arch and hwcaps: AMD64, amd64-cx16-rdtscp-sse3-avx
--8350-- Page sizes: currently 4096, max supported 4096
--8350-- Valgrind library directory: /usr/lib/valgrind
--8350-- Reading syms from /tmp/.KG3FI5/student.out
--8350-- Reading syms from /lib/x86_64-linux-gnu/ld-2.19.so
--8350--   Considering /lib/x86_64-linux-gnu/ld-2.19.so ..
--8350--   .. CRC mismatch (computed 4cbae35e wanted 8d683c31)
--8350--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.19.so ..
--8350--   .. CRC is valid
--8350-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--8350--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--8350--   .. CRC mismatch (computed 37cdde19 wanted adc367dd)
--8350--    object doesn't have a symbol table
--8350--    object doesn't have a dynamic symbol table
--8350-- Scheduler: using generic scheduler lock implementation.
--8350-- Reading suppressions file: /usr/lib/valgrind/default.supp
==8350== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-8350-by-mahesh-on-???
==8350== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-8350-by-mahesh-on-???
==8350== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-8350-by-mahesh-on-???
==8350== 
==8350== TO CONTROL THIS PROCESS USING vgdb (which you probably
==8350== don't want to do, unless you know exactly what you're doing,
==8350== or are doing some strange experiment):
==8350==   /usr/lib/valgrind/../../bin/vgdb --pid=8350 ...command...
==8350== 
==8350== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==8350==   /path/to/gdb ./student.out
==8350== and then give GDB the following command
==8350==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=8350
==8350== --pid is optional if only one valgrind process is running
==8350== 
--8350-- REDIR: 0x4019ca0 (strlen) redirected to 0x38068331 (???)
--8350-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--8350--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--8350--   .. CRC mismatch (computed 329d6860 wanted c0186920)
--8350--    object doesn't have a symbol table
--8350-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--8350--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--8350--   .. CRC mismatch (computed 1fb85af8 wanted 2e9e3c16)
--8350--    object doesn't have a symbol table
==8350== WARNING: new redirection conflicts with existing -- ignoring it
--8350--     old: 0x04019ca0 (strlen              ) R-> (0000.0) 0x38068331 ???
--8350--     new: 0x04019ca0 (strlen              ) R-> (2007.0) 0x04c2e1a0 strlen
--8350-- REDIR: 0x4019a50 (index) redirected to 0x4c2dd50 (index)
--8350-- REDIR: 0x4019c70 (strcmp) redirected to 0x4c2f2f0 (strcmp)
--8350-- REDIR: 0x401a9c0 (mempcpy) redirected to 0x4c31da0 (mempcpy)
--8350-- Reading syms from /lib/x86_64-linux-gnu/libc-2.19.so
--8350--   Considering /lib/x86_64-linux-gnu/libc-2.19.so ..
--8350--   .. CRC mismatch (computed e7228afa wanted 93ff6981)
--8350--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.19.so ..
--8350--   .. CRC is valid
--8350-- REDIR: 0x4ec47e0 (strcasecmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--8350-- REDIR: 0x4ec6ad0 (strncasecmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--8350-- REDIR: 0x4ec3fb0 (memcpy@GLIBC_2.2.5) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--8350-- REDIR: 0x4ec2240 (rindex) redirected to 0x4c2da30 (rindex)
--8350-- REDIR: 0x4ebeaf0 (strcmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--8350-- REDIR: 0x4f77d40 (__strcmp_ssse3) redirected to 0x4c2f1b0 (strcmp)
--8350-- REDIR: 0x4ecb540 (strchrnul) redirected to 0x4c319b0 (strchrnul)
--8350-- REDIR: 0x4eba1d0 (malloc) redirected to 0x4c2ab10 (malloc)
--8350-- REDIR: 0x4ec2e90 (__GI_strstr) redirected to 0x4c32030 (__strstr_sse2)
--8350-- REDIR: 0x4ec0540 (strlen) redirected to 0x4c2e0e0 (strlen)
==8350== Invalid read of size 8
==8350==    at 0x401023: HuffTree_readBinaryHeader (answer11.c:254)
==8350==    by 0x40205E: process_file (example.c:29)
==8350==    by 0x402203: main (example.c:81)
==8350==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8350== 
==8350== 
==8350== Process terminating with default action of signal 11 (SIGSEGV)
==8350==  Access not within mapped region at address 0x0
==8350==    at 0x401023: HuffTree_readBinaryHeader (answer11.c:254)
==8350==    by 0x40205E: process_file (example.c:29)
==8350==    by 0x402203: main (example.c:81)
==8350==  If you believe this happened as a result of a stack
==8350==  overflow in your program's main thread (unlikely but
==8350==  possible), you can try to increase the size of the
==8350==  main thread stack using the --main-stacksize= flag.
==8350==  The main thread stack size used in this run was 8388608.
--8350-- REDIR: 0x4eba870 (free) redirected to 0x4c2bd80 (free)
==8350== 
==8350== HEAP SUMMARY:
==8350==     in use at exit: 576 bytes in 2 blocks
==8350==   total heap usage: 2 allocs, 0 frees, 576 bytes allocated
==8350== 
==8350== Searching for pointers to 2 not-freed blocks
==8350== Checked 83,032 bytes
==8350== 
==8350== LEAK SUMMARY:
==8350==    definitely lost: 0 bytes in 0 blocks
==8350==    indirectly lost: 0 bytes in 0 blocks
==8350==      possibly lost: 0 bytes in 0 blocks
==8350==    still reachable: 576 bytes in 2 blocks
==8350==         suppressed: 0 bytes in 0 blocks
==8350== Reachable blocks (those to which a pointer was found) are not shown.
==8350== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==8350== 
==8350== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==8350== 
==8350== 1 errors in context 1 of 1:
==8350== Invalid read of size 8
==8350==    at 0x401023: HuffTree_readBinaryHeader (answer11.c:254)
==8350==    by 0x40205E: process_file (example.c:29)
==8350==    by 0x402203: main (example.c:81)
==8350==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8350== 
==8350== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
